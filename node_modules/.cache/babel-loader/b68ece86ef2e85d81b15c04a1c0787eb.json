{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure, signInSuccess, emailSignInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/avitoshtotaram/Udemy_Classes/react_app/avi-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","signInSuccess","emailSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","emailSignInSuccess","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA4C,oBAA5C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,aAAnD,EAAkEC,kBAAlE,QAA4F,gBAA5F;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAArB;AACA,UAAMS,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACO,mBAAmB,CAAC;AAACU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAApB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACQ,mBAAmB,CAACW,KAAD,CAApB,CAAT;AACH;AACJ;AAGD,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMrB,UAAU,CAACI,eAAe,CAACkB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AAID,OAAO,UAAUW,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC3D,MAAI;AACA,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMX,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAAC2B,kBAAkB,CAAC;AAACV,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAnB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACU,kBAAkB,CAACS,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUS,kBAAV,GAA+B;AAClC,QAAM7B,UAAU,CAACI,eAAe,CAAC0B,mBAAjB,EAAsCP,eAAtC,CAAhB;AAEH;AAED,OAAO,UAAUQ,SAAV,GAAsB;AACzB,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACkB,mBAAD,CAAL,EAA4BlB,IAAI,CAAC0B,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call  } from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types'\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'\nimport { googleSignInSuccess, googleSignInFailure, signInSuccess, emailSignInFailure } from './user.actions'\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider)\n        const userRef = yield call(createUserProfileDocument, user)\n        const userSnapshot = yield userRef.get()\n        yield put(googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n    } catch (error) {\n        yield put(googleSignInFailure(error))\n    }\n}\n\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\n\n\nexport function* signInWithEmail({payload: {email, password}}) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\n        const userRef = yield call(createUserProfileDocument, user)\n        const userSnapshot = yield userRef.get()\n        yield put(emailSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n    } catch (error) {\n        yield put(emailSignInFailure(error))\n    }\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n    \n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}